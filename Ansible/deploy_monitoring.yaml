---
- name: Deploy Monitoring Stack (Prometheus, Grafana, ELK, CloudWatch) on EKS
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    namespace: mohamed-esmael-namespace
    cloudwatch_namespace: amazon-cloudwatch
    cluster_name: mohamed-esmael-cluster-v2
    region: us-east-1

  tasks:
    - name: Configure kubeconfig to connect to EKS
      ansible.builtin.shell: >
        aws eks update-kubeconfig --region {{ region }} --name {{ cluster_name }}
      changed_when: false

    - name: Add Helm repositories
      ansible.builtin.shell: |
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo add grafana https://grafana.github.io/helm-charts
        helm repo add elastic https://helm.elastic.co
        helm repo add eks https://aws.github.io/eks-charts
        helm repo update
      changed_when: false

    - name: Install Kubernetes Python client
      ansible.builtin.pip:
        name: kubernetes
        extra_args: --user

    - name: Install Prometheus via Helm
      kubernetes.core.helm:
        name: prometheus
        chart_ref: prometheus-community/prometheus
        release_namespace: "{{ namespace }}"
        create_namespace: true
        wait: true
        timeout: "600s"
        values:
          alertmanager:
            persistence:
              enabled: true
              storageClass: gp3
              size: 2Gi
          server:
            persistentVolume:
              enabled: true
              storageClass: gp3
              size: 8Gi

    - name: Install Grafana via Helm
      kubernetes.core.helm:
        name: grafana
        chart_ref: grafana/grafana
        release_namespace: "{{ namespace }}"
        create_namespace: false
        wait: true
        timeout: "600s"
        values:
          adminPassword: "Admin123"
          persistence:
            enabled: true
            storageClassName: gp3
            size: 5Gi

    - name: Create Elasticsearch values file
      ansible.builtin.copy:
        dest: /tmp/elasticsearch-values.yaml
        content: |
          replicas: 3
          minimumMasterNodes: 2
          volumeClaimTemplate:
            accessModes: [ "ReadWriteOnce" ]
            resources:
              requests:
                storage: 10Gi
            storageClassName: gp3
          esJavaOpts: "-Xmx512m -Xms512m"
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 1Gi

    - name: Install Elasticsearch via Helm
      kubernetes.core.helm:
        name: elasticsearch
        chart_ref: elastic/elasticsearch
        release_namespace: "{{ namespace }}"
        create_namespace: false
        wait: true
        timeout: "900s"
        values_files:
          - /tmp/elasticsearch-values.yaml

    - name: Install Kibana via Helm
      kubernetes.core.helm:
        name: kibana
        chart_ref: elastic/kibana
        release_namespace: "{{ namespace }}"
        create_namespace: false
        wait: true
        timeout: "600s"
        values:
          elasticsearchHosts: "http://elasticsearch-master:9200"


    - name: Associate IAM OIDC provider with EKS
      ansible.builtin.shell: |
        eksctl utils associate-iam-oidc-provider \
          --region {{ region }} \
          --cluster {{ cluster_name }} \
          --approve
      register: oidc_result
      changed_when: "'has been associated' in oidc_result.stdout or 'created' in oidc_result.stdout"

    - name: Ensure namespace for CloudWatch exists
      kubernetes.core.k8s:
        api_version: v1
        kind: Namespace
        name: "{{ cloudwatch_namespace }}"
        state: present

    - name: Install AWS Fluent Bit via Helm
      kubernetes.core.helm:
        name: aws-for-fluent-bit
        chart_ref: eks/aws-for-fluent-bit
        release_namespace: "{{ cloudwatch_namespace }}"
        create_namespace: false
        wait: true
        timeout: "600s"
        values:
          cloudWatch:
            region: "{{ region }}"
            logGroupName: "/aws/eks/{{ cluster_name }}/application"
            logRetentionDays: 30
          clusterName: "{{ cluster_name }}"
          serviceAccount:
            create: true
