version: 0.2

env:
  variables:
    AWS_REGION: "us-east-1"
    ECR_REPO_NAME: "comprehensive-production-ci-cd-pipeline-codepipeline"
    EKS_CLUSTER_NAME: "mohamed-esmael-cluster-v2"
    EKS_NAMESPACE: "mohamed-esmael-namespace"
    EKS_SERVICE_NAME: "mohamed-esmael-service"
    AWS_ACCOUNT_ID: "025066251600"
  exported-variables:
    - IMAGE_TAG

phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - echo "Installing dependencies..."
      - apt-get update && apt-get install -y curl unzip git jq python3-pip
      - pip3 install --upgrade pip
      - pip3 install ansible boto3 botocore kubernetes
      - ansible-galaxy collection install kubernetes.core community.kubernetes
      - echo "Installing kubectl..."
      - curl -LO "https://dl.k8s.io/release/$(curl -Ls https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      - echo "Installing Helm..."
      - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
      - chmod +x get_helm.sh
      - ./get_helm.sh
      - helm version
      - ansible-galaxy collection list

  pre_build:
    commands:
      - echo "Authenticating with EKS..."
      - aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME
      - |
        if [ -f image_tag.txt ]; then
          export IMAGE_TAG="$(cat image_tag.txt | tr -d '\r\n')"
          echo "Using IMAGE_TAG from file: $IMAGE_TAG"
        else
          export IMAGE_TAG="latest"
          echo "image_tag.txt not found. Using fallback: $IMAGE_TAG"
        fi
      - export ECR_REPO_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME"

  build:
    commands:
      - echo "Running Ansible Playbook for EKS deployment..."
      - wget https://raw.githubusercontent.com/mohamedesmael10/comprehensive-production-ci-cd-pipeline/codepipeline/Ansible/deploy_monitoring.yaml
        - ansible-playbook deploy_monitoring.yaml --extra-vars "image_repo=$ECR_REPO_URI image_tag=$IMAGE_TAG namespace=$EKS_NAMESPACE service_name=$EKS_SERVICE_NAME"

artifacts:
  files:
    - image_tag.txt
