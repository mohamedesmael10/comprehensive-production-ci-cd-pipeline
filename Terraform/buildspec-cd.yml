version: 0.2

env:
  variables:
    APP_NAME: "comprehensive-production-ci-cd-pipeline-codepipeline"   

phases:
  install:
    commands:
      - set -e
      - echo "Updating apt and installing Ansible & Git..."
      - apt-get update
      - apt-get install -y ansible git
      - git config --global --add safe.directory /codebuild/output/src*

  pre_build:
    commands:
      - set -e
      - |
        if [ -z "$IMAGE_TAG" ]; then
          echo "ERROR: IMAGE_TAG environment variable is not set!"
          exit 1
        fi
      - echo "Using APP_NAME=$APP_NAME and IMAGE_TAG=$IMAGE_TAG"

  build:
    commands:
      - set -e
      - echo "Running Ansible playbook to deploy monitoring stack..."
      - ansible-playbook Ansible/deploy_monitoring.yaml --extra-vars "image_tag=$IMAGE_TAG"
      - echo "Updating ArgoCD manifest image tag in argocd/deployment.yaml..."
      - sed -i "s|${APP_NAME}:.*|${APP_NAME}:${IMAGE_TAG}|g" argocd/deployment.yaml

  post_build:
    commands:
      - echo "Updating ArgoCD manifests with IMAGE_TAG=$IMAGE_TAG"
      - git config user.email "ci-bot@company.com"
      - git config user.name "CI Bot"
      - git pull --rebase || true
      - sed -i "s|image:.*|image: ${DOCKERHUB_USER}/${APP_NAME}:${IMAGE_TAG}|" argocd/deployment.yaml
      - git add argocd/deployment.yaml
      - git commit -m "Update ArgoCD deployment to ${IMAGE_TAG}" || echo "No changes to commit"
      - git tag "deploy-${IMAGE_TAG}"
      - git push origin HEAD || echo "Push failed, probably no changes"
      - git push origin "deploy-${IMAGE_TAG}" || echo "Tag push failed"

artifacts:
  files:
    - argocd/deployment.yaml
