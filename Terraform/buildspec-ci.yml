version: 0.2

env:
  variables:
    APP_NAME: "comprehensive-production-ci-cd-pipeline-codepipeline"
    AWS_REGION: "us-east-1"
    AWS_ACCOUNT_ID: "025066251600"     
    ECR_REPO_URI: "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${APP_NAME}"
  exported-variables:
    - IMAGE_TAG

phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
      - echo "Installing required tools..."
      - apt-get update && apt-get install -y git unzip curl docker.io jq
      - (service docker start || systemctl start docker || dockerd &) && sleep 5
      - for i in $(seq 1 30); do docker info && break || sleep 1; done

      - echo "Installing Trivy..."
      - curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

      - echo "Installing SonarScanner..."
      - curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
      - unzip sonar-scanner.zip && mv sonar-scanner-*/ /opt/sonar-scanner && rm sonar-scanner.zip
      - export PATH="/opt/sonar-scanner/bin:$PATH"

  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws --version
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin "$ECR_REPO_URI"
      - export IMAGE_TAG="$CODEBUILD_BUILD_NUMBER"
      - echo "IMAGE_TAG=$IMAGE_TAG"

      - echo "Running Trivy filesystem scan..."
      - trivy fs --exit-code 0 --severity HIGH,CRITICAL --skip-dirs target,.git .

  build:
    commands:
      - echo "Building project with Maven..."
      - mvn clean package
      - mvn test
      - mvn dependency:copy-dependencies

      - echo "Building and tagging Docker image..."
      - docker build -t "$ECR_REPO_URI:$IMAGE_TAG" .
      - docker tag "$ECR_REPO_URI:$IMAGE_TAG" "$ECR_REPO_URI:latest"

  post_build:
    commands:
      - echo "Running SonarCloud analysis..."
      - sonar-scanner \
          -Dsonar.projectKey=comprehensive-production-ci-cd-pipeline \
          -Dsonar.organization=mohamedesmael10 \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.java.binaries=target \
          -Dsonar.java.libraries=target/dependency/*.jar \
          -Dsonar.login="$SONAR_TOKEN"

      - echo "Checking SonarCloud Quality Gate..."
      - |
        sleep 10
        REPORT=$(curl -s -u "$SONAR_TOKEN": "https://sonarcloud.io/api/qualitygates/project_status?projectKey=comprehensive-production-ci-cd-pipeline")
        echo "$REPORT"
        STATUS=$(echo "$REPORT" | jq -r '.projectStatus.status')
        if [ "$STATUS" != "OK" ]; then
          echo "Quality gate failed: $STATUS"
          exit 1
        fi

      - echo "Running Trivy scan on Docker image..."
      - trivy image --exit-code 0 --severity HIGH,CRITICAL "$ECR_REPO_URI:$IMAGE_TAG"

      - echo "Pushing image to Amazon ECR..."
      - docker push "$ECR_REPO_URI:$IMAGE_TAG"
      - docker push "$ECR_REPO_URI:latest"

artifacts:
  files:
    - target/*.jar
    - target/dependency/**/*
