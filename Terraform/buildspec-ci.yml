version: 0.2

env:
  variables:
    APP_NAME: "comprehensive-production-ci-cd-pipeline-codepipeline"
    DOCKERHUB_USER: "mohamedesmael10"
  exported-variables:
    - IMAGE_TAG

phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
      - set -e
      - echo "Installing tools: Trivy, SonarScanner, Docker..."
      - apt-get update && apt-get install -y git unzip curl docker.io
      - |
        echo "Starting Docker daemon..."
        systemctl start docker || service docker start || (dockerd &)
        for i in $(seq 1 30); do
          docker info && break
          echo "Waiting for Docker to start..."
          sleep 1
        done

      # Install Trivy
      - curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

      # Install SonarScanner
      - curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
      - unzip sonar-scanner.zip && mv sonar-scanner-*/ /opt/sonar-scanner
      - rm sonar-scanner.zip
      - export PATH="/opt/sonar-scanner/bin:$PATH"
      - echo "PATH updated with SonarScanner: $PATH"

  pre_build:
    commands:
      - set -e
      - echo "Logging in to Docker Hub..."
      - echo "$DOCKERHUB_PASS" | docker login --username "$DOCKERHUB_USER" --password-stdin

      - echo "Running Trivy scan on source directory..."
      - trivy fs --exit-code 0 --severity HIGH,CRITICAL --skip-dirs target,.git .

  build:
    commands:
      - set -e
      - echo "Building Java app with Maven..."
      - mvn clean package
      - mvn dependency:copy-dependencies

      - echo "Setting IMAGE_TAG to CodeBuild build number..."
      - export IMAGE_TAG="$CODEBUILD_BUILD_NUMBER"
      - echo "IMAGE_TAG=$IMAGE_TAG"

      - echo "Building Docker image..."
      - docker build -t "$DOCKERHUB_USER/$APP_NAME:$IMAGE_TAG" .
      - docker tag "$DOCKERHUB_USER/$APP_NAME:$IMAGE_TAG" "$DOCKERHUB_USER/$APP_NAME:latest"

  post_build:
    commands:
      - set -e
      - echo "Running SonarCloud scan..."
      - sonar-scanner \
          -Dsonar.projectKey=comprehensive-production-ci-cd-pipeline \
          -Dsonar.organization=mohamedesmael10 \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.java.binaries=target \
          -Dsonar.java.libraries=target/dependency/*.jar \
          -Dsonar.login="$SONAR_TOKEN"

      - echo "Fetching SonarCloud Quality Gate status..."
      - |
        REPORT=$(curl -s -u "$SONAR_TOKEN": \
          "https://sonarcloud.io/api/qualitygates/project_status?projectKey=comprehensive-production-ci-cd-pipeline")
        echo "$REPORT"

      - echo "Scanning Docker image for vulnerabilities..."
      - trivy image --exit-code 0 --severity HIGH,CRITICAL "$DOCKERHUB_USER/$APP_NAME:$IMAGE_TAG"

      - echo "Pushing Docker images to Docker Hub..."
      - docker push "$DOCKERHUB_USER/$APP_NAME:$IMAGE_TAG"
      - docker push "$DOCKERHUB_USER/$APP_NAME:latest"

      - echo "Exported IMAGE_TAG=$IMAGE_TAG for downstream CD pipeline"

artifacts:
  files:
    - target/*.jar
    - target/dependency/**/*
